Exploring/Cleaning/Analyzing Data using SQLite3

Questions Answered:

#1 Top 5 worst/best selling movies by revenue
#2 Top 10 movies that are musicals by revenue
#3 All movies the failed to bring a return on investment
#4 What movie brought back the greatest ROI?
#5 Top 10 Least/Most expensive movies by Cost Per Minute that made a profit
#6 Which director made the most in revenue adjust for inflation?
#7 Who is the most popular director?
#8 Who directed the most movies?
#9 What director has generated the most profit?
#10 What director has the greatest total ROI
#11 What director, with more than 2 movies, has the greatest total ROI


~~~#1~~~ 


Finding the 10 worst and best selling movies by revenue

SELECT original_title, revenue
  FROM Movie_Data
  ORDER BY revenue
  LIMIT 5;
  
Brings back:
original_title            revenue
Halo Legends              1000000.0
A Hard Day's Night        1000549.0
Where the Wild Things Are 100086793.0
The Dark Knight           1001921825.0
Little Miss Sunshine      100523181.0

That's not right

Noticed the revenue coloumn is being read as a STRING data type which brings back false results 

So I test usuing the CAST function to change the data type to FLOAT so SQLite reads the entire numeric value in the revenue cell

SELECT original_title, revenue
  FROM Movie_Data
  ORDER BY CAST(revenue AS FLOAT)
  LIMIT 5;

Which brings back:
original_title	          revenue
Boy                       43.0
Death at a Funeral        46.0
Wanted                    134.0
The Sum of All Fears      193.0
The Hunt for Red October  200.0

and by putting 'desc' after the CAST function we get the top 5 revenue movies which are:

original_title	              revenue
Avatar                        2781505847.0
Star Wars: The Force Awakens  2068178225.0
Titanic                       1845034188.0
The Avengers                  1519557910.0
Jurassic World                1513528810.0

Cross checking these results show they are correct


~~~#2~~~~


Top 10 movies that are musicals by revenue

SELECT original_title, revenue, budget, profit
  FROM Movie_Data
  WHERE genres like '%music%'
  ORDER BY CAST(revenue AS FLOAT) desc
  LIMIT 10;

Results:
original_title.                         revenue     budget      profit
Alvin and the Chipmunks: The Squeakquel 443140005.0 75000000.0  368140005.0
Les MisÃ©rables                         441809770.0 61000000.0  380809770.0
Beauty and the Beast                    377350553.0 25000000.0  352350553.0
Alvin and the Chipmunks                 361366633.0 60000000.0  301366633.0
The Princess and the Frog               267045765.0 105000000.0 162045765.0
Dirty Dancing                           213954274.0 6000000.0   207954274.0
Into the Woods                          212902372.0 50000000.0  162902372.0
Straight Outta Compton                  201634991.0 28000000.0  173634991.0
The Muppets                             165184237.0 45000000.0  120184237.0
Hannah Montana: The Movie               155545279.0 35000000.0  120545279.0

Alvin and the Chipmunks beats Les Mis in revenue but not in profit


~~~#3~~~


All movies the failed to bring a return on investment
(I threw in popularity because this same query will allow me to do multiple bits of analysis such as:
Budget:Popularity
Popularity:Revenue)

SELECT original_title, popularity, budget, revenue,
  ROUND((revenue / budget) * 100, 2) as Return_On_Investment
  FROM Movie_Data
  WHERE Return_On_Investment <=100
  ORDER BY Return_On_Investment desc;
  
(RESULTS ON TABLEAU DASHBOARD)


~~~#4~~~


What movie brought back the greatest ROI?

SELECT original_title, budget, revenue,
  ROUND((revenue / budget) * 100, 2) as Return_On_Investment
  FROM Movie_Data
  ORDER BY Return_On_Investment desc
  LIMIT 1
  
original_title.    budget revenue   Return_On_Investment
From Prada to Nada 93.0   2500000.0 2688172.04


~~~#5~~~


10 Least expensive movie by Cost Per Minute that made a profit

SELECT
  original_title
  ,runtime
  ,budget
  ,ROUND(budget / runtime, 2) as Cost_Per_Minute
  ,profit
FROM Movie_Data
WHERE CAST(profit as FLOAT) > 0
ORDER BY Cost_Per_Minute;

original_title            runtime budget    Cost_Per_Minute   profit
Love, Wedding, Marriage   90      1.0       0.01              1377.0
Boy                       87      3.0       0.03              40.0
The Hunt for Red October  134     30.0      0.22              170.0
The Sum of All Fears      124     68.0      0.55              125.0
Wanted                    129     75.0      0.58              59.0
From Prada to Nada        107     93.0      0.87              2499907.0
Weekend                   96      8000.0    83.33             461947.0
Primer                    79      7000.0    88.61             417760.0
Bellflower                106     17000.0   160.38            84236.0
Paranormal Activity       86      15000.0   174.42            193340800.0

10 Most expensive movie by Cost Per Minute that made a profit

SELECT
  original_title
  ,runtime
  ,budget
  ,ROUND(budget / runtime, 2) as Cost_Per_Minute
  ,profit
FROM Movie_Data
WHERE CAST(profit as FLOAT) > 0
ORDER BY Cost_Per_Minute DESC;

original_title                              runtime budget       Cost_Per_Minute  profit
Pirates of the Caribbean: On Stranger Tides 136     380000000.0  2794117.65       641683000.0
Tangled                                     100     260000000.0  2600000          331794936.0
Men in Black 3                              106     225000000.0  2122641.51       399026776.0
A Christmas Carol                           96      200000000.0  2083333.33       125233863.0
Brave                                       93      185000000.0  1989247.31       353983207.0
Avengers: Age of Ultron                     141     280000000.0  1985815.6        1125035767.0
John Carter                                 132     260000000.0  1969696.97       24139100.0
Toy Story 3                                 103     200000000.0  1941747.57       863171911.0
X-Men: Days of Future Past                  131     250000000.0  1908396.95       496000000.0
Quantum of Solace                           106     200000000.0  1886792.45       386090727.0


~~~#6~~~


Which director made the most in revenue adjusted for 2010 dollars

SELECT director, 
  ROUND(SUM(CAST(revenue_adj AS FLOAT)), 2) as total_revenue_adj_generated
  FROM Movie_Data
  GROUP BY director
  ORDER BY total_revenue_adj_generated desc;

director          total_revenue_adj_generated
Steven Spielberg  9623371543.45


~~~#7~~~


Who is the most popular director?

SELECT director, 
  ROUND(SUM(CAST(popularity AS FLOAT)), 2) as poplularity_index
  FROM Movie_Data
  GROUP BY director
  ORDER BY poplularity_index desc

director           poplularity_index
Christopher Nolan  60.45


~~~#8~~~


Who directed the most movies?

SELECT director, 
  COUNT(*) as number_of_movies_directed
  FROM Movie_Data
  GROUP BY director
  ORDER BY number_of_movies_directed desc;

director        number_of_movies_directed
John Carpenter  12


~~~#9~~~


What director has generated the most profit?

SELECT director, 
  ROUND(SUM(CAST(profit AS FLOAT)), 2) as total_profit
  FROM Movie_Data
  GROUP BY director
  ORDER BY total_profit desc;

director       total_profit
Peter Jackson  4857642820


~~~#10~~~


What director has the greatest total ROI

SELECT director,
  ROUND(SUM(revenue) / SUM(budget) * 100, 2) as Return_On_Investment
  FROM Movie_Data
  GROUP BY director
  ORDER BY Return_On_Investment desc;
  
director      Return_On_Investment
Angel Gracia  2688172.04
  
  
~~~#11~~~


What director, with more than 2 movies, has the greatest total ROI

SELECT 
  director, 
  ROUND(SUM(revenue) / SUM(budget) * 100, 2) as Return_On_Investment,
  COUNT(director) as number_of_movies_directed
FROM 
  Movie_Data
GROUP BY 
  director
HAVING 
  COUNT(director) >2
ORDER BY 
  Return_On_Investment desc;
  
director       Return_On_Investment  number_of_movies_directed
Alex Kendrick  3172.76               4
